{
  "name": "Kinetica BlackBox SDK",
  "desc": "Usage examples for model functions",
  "src_uri": "kinetica/kinetica-blackbox-sdk:r7.1.9",
  "type": "BLACKBOX",
  "functions": [
    {
      "name": "The mathbox",
      "desc": "Row-by-row inference; Trivial math calculations",
      "bb_module": "bb_module_default",
      "bb_function": "basic_example",
      "input_record_type": [
        {
          "col_name": "figure1",
          "col_type": "double",
          "col_desc": "First figure for mathematical operations"
        },
        {
          "col_name": "figure2",
          "col_type": "double",
          "col_desc": "Second figure for mathematical operations"
        },
        {
          "col_name": "mylabel",
          "col_type": "string|char64",
          "col_desc": "Label for enhancing output"
        }
      ],
      "output_record_type": [
        {
          "col_name": "sum",
          "col_type": "double",
          "col_desc": "Sum of input figures provided"
        },
        {
          "col_name": "product",
          "col_type": "double",
          "col_desc": "Product of input figures provided"
        },
        {
          "col_name": "max",
          "col_type": "double",
          "col_desc": "Maximum of two of input figures provided"
        },
        {
          "col_name": "suminwords",
          "col_type": "string|store_only",
          "col_desc": "Sum of input figures provided with added label string"
        }
      ],
      "env_vars": [],
      "compute-support": [
        "CPU"
      ]
    },
    {
      "name": "Performance inference",
      "desc": "Operate on multiple records (as a dataframe) simultaneously for compatible models",
      "bb_module": "bb_module_default",
      "bb_function": "bulk_infer_example",
      "input_record_type": [
        {
          "col_name": "figure1",
          "col_type": "double",
          "col_desc": "First figure for mathematical operations"
        },
        {
          "col_name": "figure2",
          "col_type": "double",
          "col_desc": "Second figure for mathematical operations"
        },
        {
          "col_name": "mylabel",
          "col_type": "string|char64",
          "col_desc": "Label for enhancing output"
        }
      ],
      "output_record_type": [
        {
          "col_name": "sum",
          "col_type": "double",
          "col_desc": "Sum of input figures provided"
        },
        {
          "col_name": "product",
          "col_type": "double",
          "col_desc": "Product of input figures provided"
        },
        {
          "col_name": "max",
          "col_type": "double",
          "col_desc": "Maximum of two of input figures provided"
        },
        {
          "col_name": "suminwords",
          "col_type": "string|store_only",
          "col_desc": "Sum of input figures provided with added label string"
        }
      ],
      "env_vars": [],
      "compute-support": [
        "CPU"
      ]
    },
    {
      "name": "One-to-many row output",
      "desc": "Multi-row output common with ML classifiers",
      "bb_module": "bb_module_default",
      "bb_function": "multi_out_example",
      "input_record_type": [
        {
          "col_name": "figure1",
          "col_type": "double",
          "col_desc": "First figure for mathematical operations"
        },
        {
          "col_name": "figure2",
          "col_type": "double",
          "col_desc": "Second figure for mathematical operations"
        },
        {
          "col_name": "mylabel",
          "col_type": "string|char64",
          "col_desc": "Label for enhancing output"
        }
      ],
      "output_record_type": [
        {
          "col_name": "operation",
          "col_type": "string|store_only",
          "col_desc": "Description of operation performed"
        },
        {
          "col_name": "result",
          "col_type": "double",
          "col_desc": "Result of mathematical operation performed"
        }
      ],
      "env_vars": [],
      "compute-support": [
        "CPU"
      ]
    },
    {
      "name": "Environment variables",
      "desc": "Usage of in-container environment variables added during image build (Dockerfile)",
      "bb_module": "bb_module_default",
      "bb_function": "blackbox_function_envvar_demo",
      "input_record_type": [
        {
          "col_name": "figure1",
          "col_type": "double"
        },
        {
          "col_name": "figure2",
          "col_type": "double"
        }
      ],
      "output_record_type": [
        {
          "col_name": "sum",
          "col_type": "double"
        },
        {
          "col_name": "product",
          "col_type": "double"
        },
        {
          "col_name": "max",
          "col_type": "double"
        },
        {
          "col_name": "greeting",
          "col_type": "string|store_only"
        }
      ],
      "env_vars": [
        {
          "var_name": "ENVVAR1",
          "var_type": "string",
          "var_desc": "Description for environment variable 1",
          "var_default_val": "Hello"
        },
        {
          "var_name": "ENVVAR2",
          "var_type": "string",
          "var_desc": "Description for environment variable 2",
          "var_default_val": "World!"
        }
      ],
      "compute-support": [
        "CPU"
      ]
    },
    {
      "name": "Convert to Celsius",
      "desc": "Different module: Temperature converter (F to C)",
      "bb_module": "bb_module_temperature",
      "bb_function": "convert_to_celsius",
      "input_record_type": [
        {
          "col_name": "temp_f",
          "col_type": "double",
          "col_desc": "Temperature in fahrenheit"
        }
      ],
      "output_record_type": [
        {
          "col_name": "temp_c",
          "col_type": "double",
          "col_desc": "Temperature converted to centigrade"
        },
        {
          "col_name": "temp_k",
          "col_type": "double",
          "col_desc": "Temperature converted to kelvins"
        },
        {
          "col_name": "state",
          "col_type": "string|store_only",
          "col_desc": "The state of water at this temperature"
        }
      ],
      "env_vars": []
    },
    {
      "name": "Convert to Fahrenheit",
      "desc": "Different module: Temperature converter (C to F)",
      "bb_module": "bb_module_temperature",
      "bb_function": "convert_to_fahrenheit",
      "input_record_type": [
        {
          "col_name": "temp_c",
          "col_type": "double",
          "col_desc": "Temperature in centigrade"
        }
      ],
      "output_record_type": [
        {
          "col_name": "temp_f",
          "col_type": "double",
          "col_desc": "Temperature converted to fahrenheit"
        },
        {
          "col_name": "temp_k",
          "col_type": "double",
          "col_desc": "Temperature converted to kelvins"
        },
        {
          "col_name": "state",
          "col_type": "string|store_only",
          "col_desc": "The state of water at this temperature"
        }
      ],
      "env_vars": []
    },
    {
      "name": "Timer",
      "desc": "Demonstrate timing withing the inference function",
      "bb_module": "bb_module_default",
      "bb_function": "timer_example",
      "input_record_type": [
        {
          "col_name": "figure1",
          "col_type": "double",
          "col_desc": "First figure for mathematical operations"
        },
        {
          "col_name": "figure2",
          "col_type": "double",
          "col_desc": "Second figure for mathematical operations"
        }
      ],
      "output_record_type": [
        {
          "col_name": "inference",
          "col_type": "double",
          "col_desc": "Sum of input figures provided"
        },
        {
          "col_name": "compute_time",
          "col_type": "double",
          "col_desc": "Time in compute loop; Artificially simulated with random sleep"
        }
      ],
      "env_vars": []
    },
    {
      "name": "Bombs away",
      "desc": "Simulate a crash in the inference code",
      "bb_module": "bb_module_default",
      "bb_function": "crash_example",
      "input_record_type": [
        {
          "col_name": "text",
          "col_type": "string|char128",
          "col_desc": "Text string; If phrase 'crash now' appears the container will fault"
        }
      ],
      "output_record_type": [
        {
          "col_name": "text",
          "col_type": "string|char128",
          "col_desc": "Pass text through if no crash"
        }
      ],
      "env_vars": []
    },
    {
      "name": "Forced multi-out",
      "desc": "Use a flag in the record to signal a multi row output",
      "bb_module": "bb_module_default",
      "bb_function": "custom_multi_out_example",
      "input_record_type": [
        {
          "col_name": "text",
          "col_type": "string|char64",
          "col_desc": ""
        },
        {
          "col_name": "multiout",
          "col_type": "string|char16",
          "col_desc": "Set 'true' to engage multi-record out"
        }
      ],
      "output_record_type": [
        {
          "col_name": "text",
          "col_type": "string",
          "col_desc": "Passthrough"
        },
        {
          "col_name": "multiout",
          "col_type": "string",
          "col_desc": "Passthrough"
        }
      ],
      "env_vars": []
    }
  ]
}
